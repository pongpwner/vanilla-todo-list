(()=>{"use strict";var t={772:(t,e,n)=>{n.d(e,{Z:()=>s});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([t.id,"/*reset*/\n* {\n  box-sizing: border-box;\n  list-style: none;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.todo-form {\n  border: 1px solid black;\n}\n\n#content {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: 1fr 4fr;\n}\n\n.todo-form {\n  grid-column: 2;\n  grid-row: 1;\n}\n\n.todo-list {\n  grid-column: 2;\n  grid-row: 2;\n}\n\n.project-form {\n  grid-column: 1;\n  grid-row: 1;\n  background-color: gray;\n}\n\n.project-list {\n  grid-column: 1;\n  grid-row: 2;\n  background-color: gray;\n}/*# sourceMappingURL=styles.css.map */","",{version:3,sources:["webpack://./src/styles/styles.scss","webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,QAAA;AACA;EACE,sBAAA;EACA,gBAAA;ACCF;;ADCA;EACE,SAAA;EACA,UAAA;ACEF;;ADCA;EACE,uBAAA;ACEF;;ADCA;EACE,aAAA;EACA,8BAAA;EACA,2BAAA;ACEF;;ADAA;EACE,cAAA;EACA,WAAA;ACGF;;ADDA;EACE,cAAA;EACA,WAAA;ACIF;;ADFA;EACE,cAAA;EACA,WAAA;EACA,sBAAA;ACKF;;ADHA;EACE,cAAA;EACA,WAAA;EACA,sBAAA;ACMF,CAAA,qCAAA",sourceRoot:""}]);const s=a},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],d=o.base?c[0]+o.base:c[0],l=i[d]||0,u="".concat(d," ").concat(l);i[d]=l+1;var p=n(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var A=r(m,o);o.byIndex=s,e.splice(s,0,{identifier:u,updater:A,references:1})}a.push(u)}return a}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=n(i[a]);e[s].references--}for(var c=o(t,r),d=0;d<i.length;d++){var l=n(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),i=n(569),a=n.n(i),s=n(565),c=n.n(s),d=n(216),l=n.n(d),u=n(589),p=n.n(u),m=n(772),A={};A.styleTagTransform=p(),A.setAttributes=c(),A.insert=a().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=l(),e()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;const f={saveTodoList:function(t){localStorage.setItem("todoList",JSON.stringify(t)),console.log("local")},getTodoList:function(){let t=localStorage.getItem("todoList");return console.log(t),null===t?[C("default")]:JSON.parse(t).map((t=>({...t,addTask:function(t){this.tasks.push(t),console.log(v.todoList),f.saveTodoList(v.todoList)},removeTask:function(t){this.tasks=this.tasks.filter((e=>e.title!==t)),console.log(this),f.saveTodoList(v.todoList)}})))}},h=f,C=function(t){let e=[];return{tasks:e,name:t,addTask:function(t){this.tasks.push(t),console.log(v.todoList),console.log(e),h.saveTodoList(v.todoList)},removeTask:function(t){this.tasks=this.tasks.filter((e=>e.title!==t)),console.log(this),h.saveTodoList(v.todoList)}}},v=function(){const t=C("default");return{todoList:h.getTodoList()?h.getTodoList():t,addProject:function(t){this.todoList.push(t),h.saveTodoList(this.todoList),console.todoList},removeProject:function(t){this.todoList=this.todoList.filter((e=>e.name!==t)),console.log(this),h.saveTodoList(this.todoList)}}}();(function(){let t=v.todoList[0];const e=document.querySelector("#content"),n=document.createElement("form");n.classList.add("todo-form");const o=document.createElement("h1");o.textContent="New Task",n.appendChild(o);const r=document.createElement("ul");r.classList.add("form-section"),n.appendChild(r);const i=document.createElement("li"),a=document.createElement("label");a.setAttribute("for","title"),a.textContent="title:";const s=document.createElement("input");s.setAttribute("id","title"),s.type="text",i.appendChild(a),i.appendChild(s);const c=document.createElement("li"),d=document.createElement("label");d.setAttribute("for","desription"),d.textContent="description:";const l=document.createElement("input");l.setAttribute("id","desription"),l.type="text",c.appendChild(d),c.appendChild(l);const u=document.createElement("li"),p=document.createElement("label");p.setAttribute("for","due-date"),p.textContent="due date:";const m=document.createElement("input");m.setAttribute("id","due-date"),m.type="date",u.appendChild(p),u.appendChild(m);const A=document.createElement("li"),f=document.createElement("label");f.setAttribute("for","priority"),f.textContent="priority:";const E=document.createElement("input"),g=document.createElement("input");E.setAttribute("id","low"),g.setAttribute("id","high");const b=document.createElement("label");b.textContent="low:";const y=document.createElement("label");y.textContent="high",b.setAttribute("for","low"),y.setAttribute("for","high"),E.type="radio",E.value="low",E.name="priority",g.type="radio",g.name="priority",g.value="high",A.appendChild(f),A.appendChild(b),A.appendChild(E),A.appendChild(y),A.appendChild(g),r.appendChild(i),r.appendChild(c),r.appendChild(u),r.appendChild(A);const L=document.createElement("button");L.type="buton",L.textContent="Submit",L.addEventListener("click",(e=>{let o;e.preventDefault();let r=document.getElementsByName("priority");for(let t=0,e=r.length;t<e;t++)if(r[t].checked){o=r[t].value;break}let i=(a=s.value,c=l.value,d=m.value,{title:a,description:c,dueDate:d,priority:o});var a,c,d;console.log(t),t.addTask(i),n.reset(),P(x),N(t)})),n.appendChild(L);const x=document.createElement("ul");x.classList.add("todo-list");const k=document.createElement("h1");k.textContent=t?t.name:"",x.appendChild(k);const T=document.createElement("form");T.classList.add("project-form");const w=document.createElement("h1");w.textContent="New Project",T.appendChild(w);const j=document.createElement("div");j.classList.add("form-section"),T.appendChild(j);const S=document.createElement("label");S.textContent="Project Name:",S.setAttribute("for","project-name");const D=document.createElement("input");D.type="text",D.setAttribute("id","project-name");const I=document.createElement("button");I.type="buton",I.textContent="Submit",I.addEventListener("click",(t=>{t.preventDefault();let e=C(D.value);console.log(e),v.addProject(e),P(F),M(),T.reset(),console.log(v.todoList)})),j.appendChild(S),j.appendChild(D),j.appendChild(I);const F=document.createElement("ul");function M(){v.todoList&&(console.log(v.todoList),v.todoList.forEach((e=>{let n=document.createElement("li");n.textContent=e.name,n.addEventListener("click",(()=>{t=e,k.textContent=t.name,P(x),N(t),console.log(t)})),F.appendChild(n);let o=document.createElement("button");o.textContent="remove",n.appendChild(o),o.addEventListener("click",(()=>{v.removeProject(e.name),P(F),M()}))})))}function N(e){x.appendChild(k),e.tasks.forEach((n=>{let o=document.createElement("li");o.addEventListener("click",(()=>{o.contains(i)?o.removeChild(i):o.appendChild(i)})),x.appendChild(o);let r=document.createElement("div");r.textContent=n.title;let i=document.createElement("div");i.textContent=n.description,i.classList.add("description");let a=document.createElement("div");a.textContent=n.dueDate;let s=document.createElement("div");s.textContent=n.priority,o.appendChild(r),o.appendChild(a),o.appendChild(s);let c=document.createElement("button");c.textContent="remove",o.appendChild(c),c.addEventListener("click",(()=>{e.removeTask(n.title),P(x),N(t)}))}))}function P(t){for(;t.firstChild;)t.removeChild(t.firstChild)}return F.classList.add("project-list"),{loadUI:function(){v.todoList=h.getTodoList(),console.log(x.todoList),console.log(t),e.appendChild(n),e.appendChild(x),e.appendChild(T),e.appendChild(F),M(),N(t)}}})().loadUI()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,