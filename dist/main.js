(()=>{"use strict";var e={772:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"/*reset*/\n* {\n  box-sizing: border-box;\n  list-style: none;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.todo-form {\n  border: 1px solid black;\n}/*# sourceMappingURL=styles.css.map */","",{version:3,sources:["webpack://./src/styles/styles.scss","webpack://./src/styles/styles.css"],names:[],mappings:"AAAA,QAAA;AACA;EACE,sBAAA;EACA,gBAAA;ACCF;;ADCA;EACE,SAAA;EACA,UAAA;ACEF;;ADCA;EACE,uBAAA;ACEF,CAAA,qCAAA",sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var p=n(u),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var m=r(f,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=o(e,r),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),c=n(565),s=n.n(c),d=n(216),l=n.n(d),u=n(589),p=n.n(u),f=n(772),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),t()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const h={todoList:[function(e){let t=[];return{tasks:t,name:"default",addTask:function(e){this.tasks.push(e),console.log(t)},removeTask:function(e){this.tasks=this.tasks.filter((t=>t.title!==e)),console.log(this)}}}()],addProject:function(e){this.todoList.push(e)}};(function(){const e=document.querySelector("#content"),t=document.createElement("form");t.classList.add("todo-form");const n=document.createElement("h1");n.textContent="New Task",t.appendChild(n);const o=document.createElement("ul");o.classList.add("form-section"),t.appendChild(o);const r=document.createElement("li"),a=document.createElement("label");a.for="title",a.textContent="title:";const i=document.createElement("input");i.setAttribute("id","title"),i.type="text",r.appendChild(a),r.appendChild(i);const c=document.createElement("li"),s=document.createElement("label");s.for="description",s.textContent="description:";const d=document.createElement("input");d.setAttribute("id","desription"),d.type="text",c.appendChild(s),c.appendChild(d);const l=document.createElement("li"),u=document.createElement("label");u.for="due-date",u.textContent="due date:";const p=document.createElement("input");p.setAttribute("id","due-date"),p.type="text",l.appendChild(u),l.appendChild(p);const f=document.createElement("li"),m=document.createElement("label");m.for="priority",m.textContent="priority:";const v=document.createElement("input");v.setAttribute("id","priority"),v.type="text",f.appendChild(m),f.appendChild(v),o.appendChild(r),o.appendChild(c),o.appendChild(l),o.appendChild(f);const A=document.createElement("button");A.type="buton",A.textContent="Submit",A.addEventListener("click",(e=>{e.preventDefault();let n=(o=i.value,r=d.value,a=p.value,c=v.value,{title:o,description:r,dueDate:a,priority:c});var o,r,a,c;console.log(h.todoList[0]),h.todoList[0].addTask(n),t.reset(),b(C),y(),console.log(h.todoList[0])})),t.appendChild(A);const C=document.createElement("ul");function y(){h.todoList[0].tasks.forEach((e=>{let t=document.createElement("li");t.textContent=e.title,C.appendChild(t);let n=document.createElement("button");n.textContent="remove",t.appendChild(n),n.addEventListener("click",(()=>{h.todoList[0].removeTask(e.title),b(C),y()}))}))}function b(e){for(;e.firstChild;)e.removeChild(e.firstChild)}return C.classList.add("todo-list"),{loadUI:function(){e.appendChild(t),e.appendChild(C)}}})().loadUI()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,